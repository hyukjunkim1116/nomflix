{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Routes/Home.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","history","useHistory","useForm","register","handleSubmit","useEffect","onChange","get","start","variants","animate","initial","to","whileHover","xmlns","width","height","viewBox","path","d","isExact","layoutId","onSubmit","data","push","keyword","window","location","reload","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getLatestMovies","fetch","then","response","json","getTopRatedMovies","getUpcomingMovies","getMovies","getAiringTodayTv","getTopRatedTv","getPopularTv","getLatestTv","makeImagePath","id","format","makeComingSoonImg","makeNoImg","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","p","Slider","Row","Box","Info","black","Overlay","BigMovie","BigCover","BigTitle","h3","BigOverview","BranchTitle","rowVariants","hidden","outerWidth","visible","exit","boxVariants","scale","hover","y","delay","duaration","infoVariants","opacity","Home","useQuery","nowPlayingData","nowPlayingLoading","isLoading","topRatedData","topRatedLoading","latestData","latestLoading","upcomingData","upcomingLoading","branch","setbranch","currentDataBranch","index","setIndex","leaving","setLeaving","bigMovieMatch","clickedMovie","params","movieId","results","find","movie","clickedLatestMovie","console","log","toggleLeaving","onBoxClicked","totalMovies","length","maxIndex","Math","floor","backdrop_path","title","overview","map","i","className","AnimatePresence","onExitComplete","duration","slice","style","backgroundImage","poster_path","original_language","release_date","status","BigSearchData","useLocation","URLSearchParams","search","searchMovies","searchMovieData","searchMovieLoading","searchTvs","searchTvData","searchTvLoading","bigSearchDataMatch","clickedSearchData","searchDataId","searchData","increseIndex","totalSearchDatas","name","goBack","BigTv","Tv","nowAiringData","nowAiringDataLoading","topRateData","topRatedDataLoading","latestDataLoading","popularData","popularDataLoading","bigTvMatch","clickedTv","tvId","tv","clickedLatestTv","onOverlayClick","totalTvs","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.2533cc1f.chunk.js","sourcesContent":["import { Link, useRouteMatch, useHistory, useParams, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState, } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  font-size: 14px;\n  padding: 20px 60px;\n  color: white;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 95px;\n  height: 25px;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 6px;\n    stroke: white;\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n`;\n\nconst Search = styled.form`\n  color: white;\n  display: flex;\n  align-items: center;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 5px;\n  height: 5px;\n  border-radius: 2.5px;\n  bottom: -5px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.red};\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 40px;\n  z-index: -1;\n  color: white;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [0, 1, 0],\n    transition: {\n      repeat: Infinity,\n    },\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nfunction Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useRouteMatch(\"/\");\n  const tvMatch = useRouteMatch(\"/tv\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({ scaleX: 1 });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  const history = useHistory();\n  \n  const { register, handleSubmit } = useForm<IForm>();\n  const onValid = (data: IForm) => {\n      history.push(`/search?keyword=${data.keyword}`);\n      window.location.reload()\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navAnimation]);\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n      <Col>\n      <Link to=\"/\">\n        <Logo\n          variants={logoVariants}\n          whileHover=\"active\"\n          animate=\"normal\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1024\"\n          height=\"276.742\"\n          viewBox=\"0 0 1024 276.742\"\n        >\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n        </Logo>\n        </Link>\n        <Items>\n          <Item>\n            <Link to=\"/\">\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/tv\">\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -185 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", { required: true, minLength: 2 })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"Search for movie or tv show...\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n}\n\nexport default Header;\n","const API_KEY = \"10923b261ba94d897ac6b81148314a3f\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\ninterface IMovie {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n}\n\nexport interface IGetMoviesResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\ninterface ITv {\n  backdrop_path: string;\n  poster_path: string;\n  name: string;\n  overview: string;\n  id: number;\n}\nexport interface IGetTvResults {\n  results: ITv[];\n}\nexport function getLatestMovies() {\n  return fetch(`${BASE_PATH}/movie/latest?api_key=${API_KEY}&language=en-US&page=1`).then(\n      response => response.json()\n  );\n}\nexport function getTopRatedMovies() {\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`).then(\n      response => response.json()\n  );\n}\n\nexport function getUpcomingMovies() {\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`).then(\n      response => response.json()\n  );\n}\nexport function getMovies() {\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\n\n\nexport function getAiringTodayTv() {\n  return fetch(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}&language=en-US&page=1`).then(\n      response => response.json()\n  );\n}\n\nexport function getTopRatedTv() {\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}&language=en-US&page=1`).then(\n      response => response.json()\n  );\n}\n\nexport function getPopularTv() {\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}&language=en-US&page=1`).then(\n      response => response.json()\n  );\n}\nexport function getLatestTv() {\n  return fetch(`${BASE_PATH}/tv/latest?api_key=${API_KEY}&language=en-US&page=1`).then(\n      response => response.json()\n  );\n}\nexport function searchMovies(keyword:string|null) {\n  return fetch(`${BASE_PATH}/search/movie?api_key=${API_KEY}&query=${keyword}&language=en-US&page=1`).then(\n      response => response.json()\n  );\n}\nexport function searchTvs(keyword:string|null) {\n  return fetch(`${BASE_PATH}/search/tv?api_key=${API_KEY}&query=${keyword}&language=en-US&page=1`).then(\n      response => response.json()\n  );\n}\n","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\nexport const makeComingSoonImg=\"https://www.whats-on-netflix.com/wp-content/uploads/2023/06/first-look-whats-coming-to-netflix-july-2023-jpg.webp\"\nexport const makeNoImg=\"https://images.unsplash.com/photo-1621955964441-c173e01c135b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1186&q=80\"\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getMovies, IGetMoviesResult,getTopRatedMovies,getUpcomingMovies,getLatestMovies } from \"../api\";\nimport { makeImagePath,makeComingSoonImg,makeNoImg } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  &.branch_0 {\n  position: relative;\n  top: -100px;\n}\n  &.branch_1 {\n    margin-top:150px;\n  }\n  &.branch_2 {\n    margin-top:250px;\n  }\n  &.branch_3 {\n    margin-top:250px;\n  }\n`;\n\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: any }>`\n  background-color: purple;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 90vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n  box-shadow: 5px 10px 30px 10px red;\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n  font-weight:400;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst BranchTitle = styled.h2`\n  padding:10px;\n  margin-left:10px;\n`\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\n\nconst offset = 6;\n\nfunction Home() {\n  const {data : nowPlayingData, isLoading : nowPlayingLoading} = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies);\n  const {data : topRatedData, isLoading : topRatedLoading } = useQuery<IGetMoviesResult>([\"movies\", \"topRated\"], getTopRatedMovies);\n  const {data : latestData, isLoading : latestLoading } = useQuery([\"movies\", \"latest\"], getLatestMovies);\n  const {data : upcomingData, isLoading : upcomingLoading } = useQuery<IGetMoviesResult>([\"movies\", \"upcoming\"], getUpcomingMovies);\n  const data = [ nowPlayingData, topRatedData, upcomingData,latestData]\n  const isLoading = ( nowPlayingLoading && topRatedLoading   && upcomingLoading&&latestLoading)\n  const [branch, setbranch] = useState(0);\n  const currentDataBranch = data[branch]\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const history = useHistory();\n  const bigMovieMatch:any = useRouteMatch<{ movieId: any}>(\"/movies/:movieId\");\n  const { scrollY } = useViewportScroll();\n  const clickedMovie =\n    bigMovieMatch?.params.movieId &&\n    currentDataBranch?.results?.find((movie:any)=> movie.id === +bigMovieMatch.params.movieId)\n  const clickedLatestMovie =\n    bigMovieMatch?.params.movieId && currentDataBranch\n  console.log(clickedLatestMovie)\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number, branch:number) => {\n    history.push(`/movies/${movieId}`);\n    setbranch(branch)\n  };\n  const onOverlayClick = () => history.push(\"/\");\n  const increseIndex = () => {\n    if (currentDataBranch) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = currentDataBranch?.results?.length ===0 ? 1 : currentDataBranch?.results?.length - 1 \n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            onClick={increseIndex}\n            bgPhoto={makeImagePath(nowPlayingData?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{nowPlayingData?.results[0].title}</Title>\n            <Overview>{nowPlayingData?.results[0].overview}</Overview>\n          </Banner>\n          {[0,1, 2,3].map(i => (\n            <>\n            { i !==3 ?\n          <Slider className={`branch_${i}`}>\n          <BranchTitle>\n                    {i === 0 ? \"Playing\" :  i === 1 ? \"Rated \" : i === 2 ? \"Upcoming \" : \"Latest\"}\n            </BranchTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n             {data[i]?.results?.slice(1).slice(offset * index, offset * index + offset).map((movie:any) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id,i)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n                  </Row>\n            </AnimatePresence>\n          </Slider> :\n          <Slider className={`branch_${i}`}>\n          <BranchTitle>\n          Latest\n            </BranchTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                    <Box\n                      layoutId={data[3]?.id + \"\"}\n                      key={data[3]?.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(data[3]?.id,i)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeComingSoonImg}\n                      \n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{data[3]?.title}</h4>\n                      </Info>\n                    </Box>\n                  </Row>\n            </AnimatePresence>\n          </Slider>\n          }\n          </>\n          ))}\n\n\n\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100,\n                    // backgroundImage: clickedLatestTv.backdrop_path ? `linear-gradient(to top, black, transparent),url(${makeImagePath(clickedLatestTv.backdrop_path,\"w500\")})` : `linear-gradient(to top, black, transparent),url(${makeNoImg})`\n                    backgroundImage: clickedLatestMovie.poster_path === null ?`linear-gradient(to top, black, transparent),url(${makeComingSoonImg})`:`linear-gradient(to top, black, transparent),url(${makeImagePath(clickedMovie.poster_path,\"w500\")})`}}\n                  layoutId={bigMovieMatch.params.movieId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage:`linear-gradient(to top, black, transparent),url(${makeImagePath(clickedMovie.backdrop_path,\"w500\")})`\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.title}</BigTitle>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                      <BigOverview>{clickedMovie.original_language}</BigOverview>\n                      <BigOverview>{clickedMovie.release_date}</BigOverview>\n                    </>\n                  )}\n                  \n                  {clickedLatestMovie && !clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent),url(${makeComingSoonImg})`,\n                        }}\n                      />\n                      <BigTitle>{clickedLatestMovie.title}</BigTitle>\n                      <BigOverview>{clickedLatestMovie.overview ? clickedLatestMovie.overview : \"No overview\"}</BigOverview>\n                      <BigOverview>Status : {clickedLatestMovie.status }</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Home;\n","import { searchMovies, searchTvs } from \"../api\";\nimport { useLocation } from \"react-router\";\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { makeImagePath ,makeNoImg} from \"../utils\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport  { useEffect, useState } from \"react\"\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  &.branch_0 {\n  position: relative;\n  top: -100px;\n}\n  &.branch_1 {\n    margin-top:150px;\n  }\n`;\n\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: any }>`\n  background-color: purple;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigSearchData = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n  font-weight:400;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst BranchTitle = styled.h2`\n  padding:10px;\n  margin-left:10px;\n`\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\n\nconst offset = 6;\n\nfunction Search() {\n    const location = useLocation();\n    const keyword = new URLSearchParams(location.search).get(\"keyword\");\n    const {data : searchMovieData, isLoading : searchMovieLoading} = useQuery([\"movies\", \"searchMovieData\"], () => searchMovies(keyword));\n    const {data : searchTvData, isLoading : searchTvLoading } = useQuery([\"movies\", \"searchTvData\"], () => searchTvs(keyword));\n    const data = [searchMovieData, searchTvData]\n    const isLoading = ( searchMovieLoading && searchTvLoading);\n    const [branch, setbranch] = useState(0);\n    const currentDataBranch = data[branch]\n    const [index, setIndex] = useState(0);\n    const [leaving, setLeaving] = useState(false);\n    const history = useHistory();\n    const bigSearchDataMatch = useRouteMatch<{ searchDataId: string }>(`/search/:searchDataId`);\n    const { scrollY } = useViewportScroll();\n    const clickedSearchData = bigSearchDataMatch?.params.searchDataId && currentDataBranch?.results.find((searchData:any) => searchData.id === +bigSearchDataMatch.params.searchDataId);\n    const toggleLeaving = () => setLeaving((prev) => !prev);\n    const onBoxClicked = (searchDataId: number, branch:number) => {\n        history.push(`/search/${searchDataId}`);\n        setbranch(branch)\n      };\n    \n    // const onOverlayClick = () => history.push(`/search?keyword=${keyword}`);\n    const onOverlayClick = () => history.goBack()\n    const increseIndex = () => {\n        if (currentDataBranch) {\n            if (leaving) return;    \n            toggleLeaving();\n            const totalSearchDatas = currentDataBranch?.results.length - 1;\n            const maxIndex = Math.floor(totalSearchDatas / offset);\n            console.log(index, maxIndex);\n            setIndex((prev) =>(prev === maxIndex ? 0 : prev + 1));\n        }\n    }\n    return (\n        <Wrapper  >\n            \n            {isLoading ? (<Loader>Loading</Loader>) : (\n            <>\n            {searchMovieData ? (<Banner\n              onClick={increseIndex}\n              bgPhoto={searchMovieData.results[0]?.backdrop_path ? makeImagePath(searchMovieData.results[0].backdrop_path, \"w500\") : makeNoImg}\n            >\n              <Title>{searchMovieData?.results[0]?.title}</Title>\n              <Overview>{searchMovieData?.results[0].overview.slice(0,400)+\"...\"}</Overview>\n            </Banner>): searchTvData ?\n            <Banner\n              onClick={increseIndex}\n              bgPhoto={searchTvData?.results[0]?.backdrop_path ? makeImagePath(searchTvData?.results[0]?.backdrop_path, \"w500\") : makeNoImg}\n            >\n              <Title>{searchTvData?.results[0]?.name}</Title>\n              <Overview>{searchTvData?.results[0]?.overview.slice(0,400)+\"...\"}</Overview>\n            </Banner> : \"Not Found\"}\n                 {[0, 1].map( i => ( \n               <>\n                <Slider className={`branch_${i}`}>\n                  <BranchTitle>\n                    {i === 0 ? \"Movies\" : \"TV Shows\" }\n                  </BranchTitle>\n                <AnimatePresence onExitComplete={toggleLeaving} initial={false}>\n                    <Row variants={rowVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" transition={{ type: \"tween\", duration: 1 }} key={index}>\n                    {data[i]?.results.slice(1).slice(offset * index, offset * index + offset).map((searchData:any) => (\n                      \n                        <Box key={searchData.id} bgPhoto={searchData.backdrop_path ? makeImagePath(searchData.backdrop_path, \"w500\") : makeNoImg}\n                        whileHover=\"hover\"\n                        initial=\"normal\"\n                        layoutId={searchData.id+\"\"}\n                        variants={boxVariants}\n                        onClick={() => onBoxClicked(searchData.id, i)}\n                        >\n                          \n                      <Info variants={infoVariants}>\n                        <h4>{searchData.title}</h4>\n                      </Info>\n                        </Box>\n                        ))}\n                    </Row>\n                    </AnimatePresence>\n                </Slider>\n                </>))}\n                <AnimatePresence>\n                    {bigSearchDataMatch ? (\n                    <>\n                     <Overlay onClick={onOverlayClick} animate={{opacity: 1}} exit={{opacity: 0}}>\n                     </Overlay>\n                    <BigSearchData\n                        style={{ top: scrollY.get() + 100 }}\n                        layoutId={bigSearchDataMatch.params.searchDataId}>\n                        {clickedSearchData && (\n                        <>\n                        {clickedSearchData.backdrop_path ? <BigCover\n                            style={{backgroundImage: `linear-gradient(to top, black, transparent), \n                            url(${makeImagePath(clickedSearchData.backdrop_path,\"w500\")})`}}>\n                        </BigCover> : <BigCover\n                            style={{backgroundImage: `linear-gradient(to top, black, transparent), \n                            url(${makeNoImg})`}}>\n                        </BigCover>}\n                        <BigTitle>{clickedSearchData.title? clickedSearchData.title : clickedSearchData.name}</BigTitle>\n                        <BigOverview>{clickedSearchData.overview.slice(0,400)+\"...\"}</BigOverview>\n                        </>\n                        )}\n                    </BigSearchData> \n                    </>\n                    ) : null}\n                </AnimatePresence>\n            </>)}\n        </Wrapper>\n    );\n}\n\nexport default Search;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getAiringTodayTv,\n  getTopRatedTv,\n  getPopularTv,\n  getLatestTv,\n  IGetTvResults } from \"../api\";\nimport { makeImagePath,makeComingSoonImg,makeNoImg } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  &.branch_0 {\n  position: relative;\n  top: -100px;\n}\n  &.branch_1 {\n    margin-top:150px;\n  }\n  &.branch_2 {\n    margin-top:250px;\n  }\n  &.branch_3 {\n    margin-top:250px;\n  }\n`;\n\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: any }>`\n  background-color: purple;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigTv = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n  font-weight:400;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\nconst BranchTitle = styled.h2`\n  padding:10px;\n  margin-left:10px;\n`\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\n\nconst offset = 6;\n\nfunction Tv() {\n\n  const {data : nowAiringData, isLoading : nowAiringDataLoading} = useQuery<IGetTvResults>([\"airingTv\", \"nowAiring\"], getAiringTodayTv);\n  const {data : topRateData, isLoading : topRatedDataLoading } = useQuery<IGetTvResults>([\"tv\", \"topRated\"], getTopRatedTv);\n  const {data : latestData, isLoading : latestDataLoading } = useQuery([\"tv\", \"latest\"], getLatestTv);\n  const {data : popularData, isLoading : popularDataLoading } = useQuery<IGetTvResults>([\"tv\", \"popular\"], getPopularTv);\n  const data = [ nowAiringData, topRateData, popularData,latestData]\n  const isLoading = ( nowAiringDataLoading && topRatedDataLoading   && popularDataLoading&&latestDataLoading)\n  const [branch, setbranch] = useState(0);\n  const currentDataBranch = data[branch]\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const history = useHistory();\n  const bigTvMatch:any = useRouteMatch<{ tvId: any}>(\"/tv/:tvId\");\n  const { scrollY } = useViewportScroll();\n  const clickedTv =\n    bigTvMatch?.params.tvId &&\n    currentDataBranch?.results?.find((tv:any)=> tv.id === +bigTvMatch.params.tvId)\n  const clickedLatestTv =\n  currentDataBranch\n  console.log(clickedLatestTv)\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number, branch:number) => {\n    history.push(`/tv/${tvId}`);\n    setbranch(branch)\n  };\n  const onOverlayClick = () => history.push(\"/tv\");\n  const increseIndex = () => {\n    if (currentDataBranch) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvs = currentDataBranch?.results?.length ===0 ? 1 : currentDataBranch?.results?.length - 1 \n      const maxIndex = Math.floor(totalTvs / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            onClick={increseIndex}\n            bgPhoto={makeImagePath(topRateData?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{topRateData?.results[0].name}</Title>\n            <Overview>{topRateData?.results[0].overview}</Overview>\n          </Banner>\n          {[0,1, 2,3].map(i => (\n            <>\n            { i !==3 ?\n          <Slider className={`branch_${i}`}>\n          <BranchTitle>\n                    {i === 0 ? \"On Airing\" :  i === 1 ? \"TopRated \" : i === 2 ? \"Popular \" : \"Latest\"}\n            </BranchTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n             {data[i]?.results?.slice(1).slice(offset * index, offset * index + offset).map((tv:any) => (\n                    <Box\n                      layoutId={`${tv.id-i}`}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id,i)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={tv.backdrop_path ? makeImagePath(tv.backdrop_path, \"w500\") :makeNoImg }\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n                  </Row>\n            </AnimatePresence>\n          </Slider> :\n          <Slider className={`branch_${i}`}>\n          <BranchTitle>\n          Latest\n            </BranchTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                    <Box\n                      layoutId={`${data[3]?.id}-${i}`+\"\"}\n                      key={data[3]?.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(data[3]?.id,i)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeComingSoonImg}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{data[3]?.name}</h4>\n                      </Info>\n                    </Box>\n                  </Row>\n            </AnimatePresence>\n          </Slider>\n          }\n          \n\n          </>\n          ))}\n\n\n{[0,1, 2,3].map(i => (\n  <AnimatePresence>\n  {bigTvMatch ? (\n    <>\n      <Overlay\n        onClick={onOverlayClick}\n        exit={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n      />\n      <BigTv\n        style={{ top: scrollY.get() + 100 }}\n        layoutId={`${bigTvMatch.params.tvId-i}`}\n      >\n        {clickedTv && (\n          <>\n            <BigCover\n          style={{\n              backgroundImage: clickedTv.backdrop_path ? `linear-gradient(to top, black, transparent),url(${makeImagePath(clickedTv.backdrop_path,\"w500\")})` : `linear-gradient(to top, black, transparent),url(${makeNoImg})`\n            }}\n            />\n            <BigTitle>{clickedTv.name}</BigTitle>\n            <BigOverview>{clickedTv.overview}</BigOverview>\n          </>\n        )}\n        {clickedLatestTv&& !clickedTv && (\n          <>\n            <BigCover\n          style={{\n              backgroundImage: clickedLatestTv.backdrop_path ? `linear-gradient(to top, black, transparent),url(${makeImagePath(clickedLatestTv.backdrop_path,\"w500\")})` : `linear-gradient(to top, black, transparent),url(${makeNoImg})`\n            }}\n            />\n            <BigTitle>{clickedLatestTv.name}</BigTitle>\n            <BigOverview>{clickedLatestTv.overview ? clickedLatestTv.overview : \"No overview\"}</BigOverview>\n                      <BigOverview>Status : {clickedLatestTv.status }</BigOverview>\n          </>\n        )}\n      </BigTv>\n    </>\n  ) : null}\n  </AnimatePresence>\n\n\n\n\n           ))}\n    \n\n\n\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Tv;\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tv\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path={[\"/tv\", \"/tv/:tvId\"]}>\n          <Tv />\n        </Route>\n        <Route path={[\"/search\", \"/search/:searchDataId\"]}>\n          <Search />\n        </Route>\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst client = new QueryClient();\n\nReactDOM.render(\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2F2F2F\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}